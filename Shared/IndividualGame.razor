@if (Game != null)
{
    @if (!IsTable)
    {
        <div class="row text-center alert alert-info">
            <div class="row">
                <p>@Game.Name</p>
                <p>@Game.Genre</p>
                <p>@Game.ReleaseDate.ToString("yyyy.MM.dd")</p>
            </div>

            @if (DisplayButtons)
            {
                <div class="row">
                    <div class="col">
                        <button class="btn btn-primary" @onclick="SwitchGame">Switch the game</button>
                    </div>
                </div>
            }

            @if (Game.Name.Equals("The Witcher 3") && AppStyles.WitcherWords != null)
            {
                <div class="row mt-3">
                    <div class="col alert alert-light text-center">
                        @AppStyles.WitcherWords[_random.Next(0, AppStyles.WitcherWords.Count)]
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <tr>
            <td>@Game.Name</td>
            <td>@Game.Genre</td>
            <td>@Game.ReleaseDate.ToString("yyyy.MM.dd")</td>
            <td>

                @if (DisplayButtons)
                {
                    <button class="btn btn-danger" @onclick="(() => DeleteGame.InvokeAsync(Game))">Delete</button>
                }
            </td>
        </tr>
    }
}

@code {
    [Parameter]
    public Game Game { get; set; }

    [Parameter]
    public bool IsTable { get; set; }

    [Parameter]
    public bool DisplayButtons { get; set; } = false;

    [Parameter]
    public EventCallback<Game> DeleteGame { get; set; }

    [Parameter]
    public EventCallback SwitchGame { get; set; }

    [CascadingParameter]
    public AppStyle AppStyles { get; set; }

    private Random _random = new Random(DateTime.Now.Millisecond);
}
